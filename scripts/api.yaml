openapi: 3.0.3
info:
  title: Swagger Person - OpenAPI 3.0
  description: |-
    This is a sample person store Server based on the OpenAPI 3.0 specification.  You can find out more about
  version: 1.0.0
servers:
  - url: http://localhost:8081
tags:
  - name: person
    description: Everything about your people
paths:
  /people:
    get:
      tags:
        - people
      description: Finds all people listed
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
    post:
      tags:
        - people
      description: Finds all people listed
      parameters:
        - name: firstname
          in: query
          description: firstname of the person
          schema:
            type: string
        - name: lastname
          in: query
          description: Status of pet that needs to be updated
          schema:
            type: string
        - name: birthday
          in: query
          schema:
            type: string
      responses:
        '200':
          description: successful operation
  /people/{id}:
    get:
      tags:
        - people
      description: Finds a person by it's ID
      parameters:
        - name: id
          in: path
          description: ID of person to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '404':
          description: Person not found
components:
  schemas:
    Person:
      type: object
      required:
        - id
        - lastname
        - firstname
        - birthday
      properties:
        id:
          type: integer
          format: int64
        lastname:
          type: string
        firstname:
          type: string
        birthday:
          type: string
    ProposePerson:
      type: object
      required:
        - lastname
        - firstname
        - birthday
      properties:
        lastname:
          type: string
        firstname:
          type: string
        birthday:
          type: object
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string